{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adriengrampone/Documents/A&F/mobin/frontend/pages/auth/index.js\";\nimport { Fragment } from 'react';\nimport { Container, Box, Grid, Card } from '@material-ui/core';\nimport { Layout, Title, Text, MonEspaceLinks } from '../../components';\nimport { monEspaceLinks, isTokenValid } from '../../utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from 'next/link';\nimport Cookies from 'cookies';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    textAlign: \"center\",\n    justifyContent: \"center\"\n  },\n  img: {\n    width: \"100%\",\n    maxHeight: \"80px\",\n    objectFit: \"contain\"\n  },\n  flexBox: {\n    display: \"flex\",\n    alignItems: 'center'\n  },\n  mainImage: {\n    maxHeight: '300px',\n    maxWidth: 'auto',\n    // opacity: 0.9,\n    display: \"block\",\n    textAlign: 'center'\n  },\n  monEspace: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: '2rem'\n  },\n  blocImages: {\n    width: \"310px\",\n    position: \"relative\",\n    \"@media (min-width: 576px)\": {\n      width: \"450px\"\n    },\n    \"@media (min-width: 768px)\": {\n      width: \"550px\"\n    }\n  },\n  imageGlobable: {\n    width: \"310px\",\n    \"@media (min-width: 576px)\": {\n      width: \"450px\"\n    },\n    \"@media (min-width: 768px)\": {\n      width: \"550px\"\n    }\n  },\n  test: {\n    \"& :nth-child(1)\": {\n      bottom: 0,\n      left: \"50%\",\n      transform: 'translate(\"-25px\", \"20px\")'\n    }\n  }\n}));\n\nconst AuthHome = ({}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              size: \"h4\",\n              letterspacing: \"2px\",\n              bold: true,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#2699b0\"\n                },\n                children: \"Mon espace\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#b1b3b4\"\n                },\n                children: \"adh\\xE9rent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 86\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.monEspace,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.blocImages,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.imageGlobable,\n              src: '/static/svg/mon-espace.svg',\n              alt: \"Mon espace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.test,\n              children: monEspaceLinks && monEspaceLinks.map((section, index) => /*#__PURE__*/_jsxDEV(MonEspaceLinks, {\n                section: section\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getServerSideProps = async ctx => {\n  const req = ctx.req ? ctx.req : null;\n\n  if (req) {\n    const cookies = new Cookies(ctx.req, ctx.res);\n    const token = cookies.get('token');\n\n    if (token) {\n      const isTokValid = isTokenValid(token);\n\n      if (isTokValid) {\n        return {\n          props: {}\n        };\n      } else {\n        ctx.res.writeHead(302, {\n          Location: '/'\n        });\n        ctx.res.end();\n        return {\n          props: {}\n        };\n      }\n    } else {\n      ctx.res.writeHead(302, {\n        Location: '/'\n      });\n      ctx.res.end();\n      return {\n        props: {}\n      };\n    }\n  } else {}\n};\nexport default AuthHome;","map":{"version":3,"sources":["/Users/adriengrampone/Documents/A&F/mobin/frontend/pages/auth/index.js"],"names":["Fragment","Container","Box","Grid","Card","Layout","Title","Text","MonEspaceLinks","monEspaceLinks","isTokenValid","makeStyles","Link","Cookies","useStyles","theme","gridItem","textAlign","justifyContent","img","width","maxHeight","objectFit","flexBox","display","alignItems","mainImage","maxWidth","monEspace","marginTop","blocImages","position","imageGlobable","test","bottom","left","transform","AuthHome","classes","color","map","section","index","getServerSideProps","ctx","req","cookies","res","token","get","isTokValid","props","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { Fragment } from 'react'\nimport { Container, Box, Grid, Card } from '@material-ui/core'\nimport { Layout, Title, Text, MonEspaceLinks } from '../../components'\nimport { monEspaceLinks, isTokenValid } from '../../utils'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from 'next/link'\nimport Cookies from 'cookies'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    gridItem: {\n        textAlign: \"center\",\n        justifyContent: \"center\"\n    },\n    img: {\n        width: \"100%\",\n        maxHeight: \"80px\",\n        objectFit: \"contain\"\n    },\n    flexBox: {\n        display: \"flex\",\n        alignItems: 'center'\n    },\n    mainImage: {\n        maxHeight: '300px',\n        maxWidth: 'auto',\n        // opacity: 0.9,\n        display: \"block\",\n        textAlign: 'center'\n    },\n    monEspace: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop:'2rem'\n    },\n    blocImages:{\n        width: \"310px\",\n        position:\"relative\",\n        \"@media (min-width: 576px)\": {\n            width: \"450px\",\n        },\n        \"@media (min-width: 768px)\": {\n            width: \"550px\",\n        }\n    },\n    imageGlobable:{\n        width: \"310px\",\n        \"@media (min-width: 576px)\": {\n            width: \"450px\",\n        },\n        \"@media (min-width: 768px)\": {\n            width: \"550px\",\n        }\n    },\n    test:{\n        \"& :nth-child(1)\": {\n            bottom: 0,\n            left: \"50%\",\n            transform: 'translate(\"-25px\", \"20px\")',\n        }\n    }\n}))\n\nconst AuthHome = ({ }) => {\n    const classes = useStyles();\n\n    return (\n        <Layout>\n            <Box mt={7}>\n                <Container maxWidth=\"lg\">\n                    <Grid container>\n                        <Box mb={2}>\n                            <Text size=\"h4\" letterspacing=\"2px\" bold>\n                                <span style={{ color: \"#2699b0\" }}>Mon espace</span> <span style={{ color: \"#b1b3b4\" }}>adhérent</span>\n                            </Text>\n                        </Box>\n                    </Grid>\n                    <div className={classes.monEspace}>\n                        <div className={classes.blocImages}>\n                            <img className={classes.imageGlobable} src={'/static/svg/mon-espace.svg'} alt=\"Mon espace\" />\n                            <div className={classes.test}>\n                            {\n                                    monEspaceLinks &&\n                                    monEspaceLinks.map((section, index) => (\n                                        <MonEspaceLinks section={section} />\n                                    ))\n                            }\n                            </div>\n                        </div>\n                    </div>\n                    {/*\n                    <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={12} md={8}>\n                            <Grid container spacing={4} justify=\"center\">\n                                {\n                                    privateMenuSections &&\n                                    privateMenuSections.map((section, index) => (\n                                        <Grid key={index} item xs={12} sm={6}>\n                                            <PrivateDocumentsCard section={section} />\n                                        </Grid>\n                                    ))\n                                }\n\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    */}\n\n                </Container>\n            </Box>\n        </Layout>\n    )\n}\n\nexport const getServerSideProps = async (ctx) => {\n    const req = ctx.req ? ctx.req : null\n    if (req) {\n        const cookies = new Cookies(ctx.req, ctx.res)\n        const token = cookies.get('token')\n        if (token) {\n            const isTokValid = isTokenValid(token)\n            if (isTokValid) {\n                return { props: {} }\n            } else {\n                ctx.res.writeHead(302, { Location: '/' })\n                ctx.res.end()\n                return { props: {} }\n            }\n\n\n        } else {\n            ctx.res.writeHead(302, { Location: '/' })\n            ctx.res.end()\n            return { props: {} }\n        }\n    } else {\n\n    }\n}\n\n\nexport default AuthHome"]},"metadata":{},"sourceType":"module"}