{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext } from 'react';\nimport { Container, Box, Grid, Card, Paper, Divider, TextField, Button, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Layout, Title, Text } from '../../components';\nimport { login } from '../../lib/auth';\nimport AppContext from '../../context/AppContext';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: '2em',\n    border: `2px solid ${theme.palette.grey.main}`\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    minWidth: '100%'\n  },\n  textFieldBox: {\n    textAlign: 'center'\n  },\n  btn: {\n    paddingLeft: '2em',\n    paddingRight: '2em',\n    color: theme.palette.blue.main,\n    fontWeight: 'bold',\n    letterSpacing: '2px',\n    borderColor: theme.palette.grey.main,\n    borderRadius: '1.5em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main\n    }\n  }\n}));\n\nconst Login = ({}) => {\n  const classes = useStyles();\n  const {\n    setUser\n  } = useContext(AppContext);\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    identifier: '',\n    password: ''\n  });\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const validateEmail = email => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const onSubmit = async () => {\n    setLoader(true);\n    const {\n      identifier,\n      password\n    } = variables;\n    setError(null);\n\n    if (!validateEmail(identifier)) {\n      setLoader(false);\n      setError('Merci de saisir une adresse email.');\n      return;\n    }\n\n    if (password.length < 1) {\n      setLoader(false);\n      setError('Un mot de passe doit être saisi.');\n      return;\n    }\n\n    try {\n      const response = await login(variables);\n      const {\n        user\n      } = response.data;\n      setUser(user);\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError('Connexion impossible avec ce couple email/mot de passe. Veuillez réessayer.');\n    } // submit credentials\n\n  };\n\n  if (loader) {\n    return /*#__PURE__*/_jsx(LinearProgress, {\n      color: \"primary\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsx(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 10,\n            md: 8,\n            children: /*#__PURE__*/_jsxs(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsx(Box, {\n                mb: 4,\n                children: /*#__PURE__*/_jsxs(Text, {\n                  size: \"h5\",\n                  letterspacing: \"2px\",\n                  bold: true,\n                  children: [/*#__PURE__*/_jsx(\"span\", {\n                    style: {\n                      color: '#b1b3b4'\n                    },\n                    children: \"Connexion\"\n                  }), ' ', /*#__PURE__*/_jsx(\"span\", {\n                    style: {\n                      color: '#2699b0'\n                    },\n                    children: \"adh\\xE9rent\"\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Divider, {\n                color: \"#b1b3b4\"\n              }), /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsx(TextField, {\n                  value: variables.identifier,\n                  onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                    identifier: event.target.value\n                  })),\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                })\n              }), /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsx(TextField, {\n                  type: \"password\",\n                  value: variables.password,\n                  onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                    password: event.target.value\n                  })),\n                  label: \"Mot de passe\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                })\n              }), error && /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                children: /*#__PURE__*/_jsx(Text, {\n                  size: \"body1\",\n                  bold: true,\n                  color: \"#e5352c\",\n                  children: error\n                })\n              }), /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsx(Button, {\n                  className: classes.btn,\n                  variant: \"outlined\",\n                  onClick: () => onSubmit(),\n                  children: \"Valider\"\n                })\n              })]\n            })\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}