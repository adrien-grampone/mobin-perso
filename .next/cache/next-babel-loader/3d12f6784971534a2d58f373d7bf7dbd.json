{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adriengrampone/Desktop/mobin-front-git/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\";\nimport AppContext from \"../context/AppContext\";\nimport { isTokenValid } from \"../utils\";\nimport { API_URL } from \"../utils/api/api-url\";\nimport * as ga from \"../lib/ga\";\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  useEffect(() => {\n    // grab token value from cookie\n    const token = Cookie.get(\"token\");\n    const isValid = isTokenValid(token);\n\n    if (token && isValid) {\n      // authenticate the token on the server and place set user object\n      fetch(`${API_URL}/users/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(async res => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          setUser(null);\n          return null;\n        }\n\n        const user = await res.json();\n        setUser(user);\n      });\n    } else {\n      Cookie.remove(\"token\");\n      setUser(null);\n      return null;\n    }\n  }, []);\n  useEffect(() => {\n    const handleRouteChange = url => {\n      ga.pageview(url);\n    }; //When the component is mounted, subscribe to router changes\n    //and log those page views\n\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange); // If the component is unmounted, unsubscribe\n    // from the event with the `off` method\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      user: user,\n      isAuthenticated: !!user,\n      setUser: setUser\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Mob'In Solutions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"viewport\",\n          content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://cdnjs.cloudflare.com/ajax/libs/jvectormap/2.0.4/jquery-jvectormap.css\",\n          type: \"text/css\",\n          media: \"screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/adriengrampone/Desktop/mobin-front-git/pages/_app.js"],"names":["useEffect","Fragment","useState","PropTypes","Head","Cookie","fetch","useRouter","ThemeProvider","CssBaseline","theme","AppContext","isTokenValid","API_URL","ga","MyApp","props","Component","pageProps","router","user","setUser","jssStyles","document","querySelector","parentElement","removeChild","token","get","isValid","headers","Authorization","then","res","ok","remove","json","handleRouteChange","url","pageview","events","on","off","isAuthenticated","propTypes","elementType","isRequired","object"],"mappings":"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","sourcesContent":["import { useEffect, Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport { useRouter } from \"next/router\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\";\nimport AppContext from \"../context/AppContext\";\n\nimport { isTokenValid } from \"../utils\";\n\nimport { API_URL } from \"../utils/api/api-url\";\n\nimport * as ga from \"../lib/ga\";\n\nexport default function MyApp(props) {\n  const { Component, pageProps } = props;\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  useEffect(() => {\n    // grab token value from cookie\n    const token = Cookie.get(\"token\");\n    const isValid = isTokenValid(token);\n    if (token && isValid) {\n      // authenticate the token on the server and place set user object\n      fetch(`${API_URL}/users/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }).then(async (res) => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          setUser(null);\n          return null;\n        }\n        const user = await res.json();\n        setUser(user);\n      });\n    } else {\n      Cookie.remove(\"token\");\n      setUser(null);\n      return null;\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleRouteChange = (url) => {\n      ga.pageview(url);\n    };\n    //When the component is mounted, subscribe to router changes\n    //and log those page views\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    // If the component is unmounted, unsubscribe\n    // from the event with the `off` method\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        user: user,\n        isAuthenticated: !!user,\n        setUser: setUser,\n      }}\n    >\n      <Fragment>\n        <Head>\n          <title>Mob'In Solutions</title>\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdnjs.cloudflare.com/ajax/libs/jvectormap/2.0.4/jquery-jvectormap.css\"\n            type=\"text/css\"\n            media=\"screen\"\n          />\n        </Head>\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n          <CssBaseline />\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </Fragment>\n    </AppContext.Provider>\n  );\n}\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}