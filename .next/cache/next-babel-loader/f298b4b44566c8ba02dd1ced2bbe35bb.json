{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, Fragment, useState } from \"react\";\nimport Head from \"next/head\";\nimport Cookie from \"js-cookie\";\nimport fetch from \"isomorphic-fetch\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../src/theme\";\nimport AppContext from \"../context/AppContext\";\nimport { isTokenValid } from \"../utils\";\nimport { API_URL } from \"../utils/api/api-url\";\nimport * as ga from \"../lib/ga\";\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  useEffect(() => {\n    // grab token value from cookie\n    const token = Cookie.get(\"token\");\n    const isValid = isTokenValid(token);\n\n    if (token && isValid) {\n      // authenticate the token on the server and place set user object\n      fetch(`${API_URL}/users/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(async res => {\n        // if res comes back not valid, token is not valid\n        // delete the token and log the user out on client\n        if (!res.ok) {\n          Cookie.remove(\"token\");\n          setUser(null);\n          return null;\n        }\n\n        const user = await res.json();\n        setUser(user);\n      });\n    } else {\n      Cookie.remove(\"token\");\n      setUser(null);\n      return null;\n    }\n  }, []);\n  useEffect(() => {\n    const handleRouteChange = url => {\n      ga.pageview(url);\n    }; //When the component is mounted, subscribe to router changes\n    //and log those page views\n\n\n    router.events.on(\"routeChangeComplete\", handleRouteChange); // If the component is unmounted, unsubscribe\n    // from the event with the `off` method\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, [router.events]);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: {\n      user: user,\n      isAuthenticated: !!user,\n      setUser: setUser\n    },\n    children: /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Mob'In Solutions\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"viewport\",\n          content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://cdnjs.cloudflare.com/ajax/libs/jvectormap/2.0.4/jquery-jvectormap.css\",\n          type: \"text/css\",\n          media: \"screen\"\n        })]\n      }), /*#__PURE__*/_jsxs(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}