{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useCallback, useContext } from 'react';\nimport { Container, Box, Grid, LinearProgress, Button, Paper, Divider, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDropzone } from 'react-dropzone';\nimport Cookies from 'cookies';\nimport { Layout, Text } from '../../../components';\nimport { getThemes, getContactEmails, isTokenValid } from '../../../utils';\nimport { postDocumentAdherent } from '../../../lib/ressources';\nimport AppContext from '../../../context/AppContext';\nimport { sendResourceNotif } from '../../../src/services/sendEmail';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: '2em',\n    border: `2px solid ${theme.palette.grey.main}`\n  },\n  paper2: {\n    padding: '2em',\n    border: `0.5px solid ${theme.palette.blue.main}`\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    minWidth: '100%'\n  },\n  textFieldBox: {// textAlign: 'center'\n  },\n  btnBox: {\n    textAlign: 'center'\n  },\n  btn: {\n    paddingLeft: '2em',\n    paddingRight: '2em',\n    color: theme.palette.blue.main,\n    fontWeight: 'bold',\n    letterSpacing: '2px',\n    borderColor: theme.palette.grey.main,\n    borderRadius: '1.5em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main\n    }\n  }\n}));\n\nconst PrivateShareDocument = ({\n  themes = [],\n  contactEmails = []\n}) => {\n  var _variables$fichier;\n\n  const classes = useStyles();\n  const {\n    user\n  } = useContext(AppContext);\n  const initialState = {\n    titre: '',\n    thematique: {},\n    fichier: null\n  };\n  const {\n    0: variables,\n    1: setVariables\n  } = useState(initialState);\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(null);\n  const onDrop = useCallback(acceptedFiles => {\n    setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n      fichier: acceptedFiles[0]\n    }));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: '.pdf'\n  });\n\n  const onSubmit = async () => {\n    setLoader(true);\n    const {\n      titre,\n      thematique,\n      fichier\n    } = variables;\n    setError(null);\n\n    if (!fichier) {\n      setLoader(false);\n      setError('Merci de télécharger un document pdf.');\n      return;\n    }\n\n    if (titre.length < 1) {\n      setLoader(false);\n      setError('Un titre de document doit être saisi.');\n      return;\n    }\n\n    if (Object.keys(thematique).length < 1) {\n      setLoader(false);\n      setError('Merci de choisir une thématique.');\n      return;\n    }\n\n    try {\n      var _response$data, _response$data$themat;\n\n      // 1. Create Form Data with Document\n      const formData = new FormData();\n      formData.append('files.fichier', fichier, fichier.name);\n      const data = {};\n      data.titre = titre;\n      data.thematique = thematique.id;\n      formData.append('data', JSON.stringify(data)); // 2. Post Form Data\n\n      const response = await postDocumentAdherent(formData); // 3. Send Email Notif\n\n      const emails = contactEmails.map(e => ({\n        email: e.email\n      }));\n      const variables = {\n        message: `L'utilisateur ${user.email} a déposé un nouveau document dans l'espace adhérents, section ${(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$themat = _response$data.thematique) === null || _response$data$themat === void 0 ? void 0 : _response$data$themat.titre) || 'inconnue'}.`,\n        emails,\n        senderEmail: user.email\n      };\n      const res = await sendResourceNotif(variables); // 4. Set Loader to false and success and variable to initial state\n\n      setVariables(initialState);\n      setSuccess('Votre document a bien été envoyé !');\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError('Impossible de télécharger le document. Veuillez réessayer.');\n    }\n  };\n\n  if (loader) {\n    return /*#__PURE__*/_jsx(LinearProgress, {\n      color: \"primary\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsx(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 10,\n            md: 8,\n            children: /*#__PURE__*/_jsxs(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsx(Box, {\n                mb: 2,\n                children: /*#__PURE__*/_jsxs(Text, {\n                  size: \"h5\",\n                  letterspacing: \"2px\",\n                  bold: true,\n                  children: [/*#__PURE__*/_jsx(\"span\", {\n                    style: {\n                      color: '#e95e2e'\n                    },\n                    children: \"Proposer une ressource\"\n                  }), ' ', /*#__PURE__*/_jsx(\"span\", {\n                    style: {\n                      color: '#2699b0'\n                    },\n                    children: \"au r\\xE9seau\"\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Box, {\n                mb: 4,\n                children: /*#__PURE__*/_jsx(Text, {\n                  size: \"body2\",\n                  bold: true,\n                  color: \"#4ba829\",\n                  children: \"Vous avez un nouveau projet, vous venez de signer une nouvelle convention, vous avez un article dans la presse, vous avez recrut\\xE9 un nouvel adh\\xE9rent, toutes les actualit\\xE9s sont les bienvenues ! N'h\\xE9sitez pas \\xE0 d\\xE9poser un fichier en format PDF pour que Mob'In en soit inform\\xE9 et puisse diffuser cette actualit\\xE9 aux autres membres du r\\xE9seau. Merci d'avance !\"\n                })\n              }), /*#__PURE__*/_jsx(Divider, {\n                color: \"#b1b3b4\"\n              }), /*#__PURE__*/_jsxs(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: [/*#__PURE__*/_jsx(Box, {\n                  mt: 2,\n                  mb: 2,\n                  children: /*#__PURE__*/_jsx(Text, {\n                    bold: true,\n                    size: \"body2\",\n                    children: \"T\\xE9l\\xE9charger un fichier\"\n                  })\n                }), /*#__PURE__*/_jsx(Box, {\n                  mb: 3,\n                  children: /*#__PURE__*/_jsx(Paper, {\n                    variant: \"outlined\",\n                    className: classes.paper2,\n                    children: /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({}, getRootProps()), {}, {\n                      children: [/*#__PURE__*/_jsx(\"input\", _objectSpread({}, getInputProps())), isDragActive ? /*#__PURE__*/_jsx(Text, {\n                        children: \"T\\xE9l\\xE9chargez votre fichier PDF ici\"\n                      }) : /*#__PURE__*/_jsx(Text, {\n                        children: \"T\\xE9l\\xE9chargez votre fichier PDF ici\"\n                      }), variables.fichier && /*#__PURE__*/_jsx(Text, {\n                        bold: true,\n                        children: variables === null || variables === void 0 ? void 0 : (_variables$fichier = variables.fichier) === null || _variables$fichier === void 0 ? void 0 : _variables$fichier.name\n                      })]\n                    }))\n                  })\n                }), /*#__PURE__*/_jsx(Box, {\n                  mb: 2,\n                  children: /*#__PURE__*/_jsx(TextField, {\n                    value: variables.titre,\n                    onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                      titre: event.target.value\n                    })),\n                    label: \"Titre\",\n                    variant: \"outlined\",\n                    size: \"small\",\n                    className: classes.textField\n                  })\n                }), /*#__PURE__*/_jsx(Box, {\n                  mb: 3,\n                  children: /*#__PURE__*/_jsxs(FormControl, {\n                    className: classes.textField,\n                    children: [/*#__PURE__*/_jsx(InputLabel, {\n                      children: \"Th\\xE8me\"\n                    }), /*#__PURE__*/_jsx(Select, {\n                      value: variables.thematique || '',\n                      onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                        thematique: event.target.value\n                      })),\n                      children: themes.map((t, i) => /*#__PURE__*/_jsx(MenuItem, {\n                        value: t,\n                        children: t.titre\n                      }, i))\n                    })]\n                  })\n                })]\n              }), error && /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                children: /*#__PURE__*/_jsx(Text, {\n                  size: \"body1\",\n                  bold: true,\n                  color: \"#e5352c\",\n                  children: error\n                })\n              }), success && /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                children: /*#__PURE__*/_jsx(Text, {\n                  size: \"body1\",\n                  bold: true,\n                  color: \"#4ba829\",\n                  children: success\n                })\n              }), /*#__PURE__*/_jsx(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.btnBox,\n                children: /*#__PURE__*/_jsx(Button, {\n                  className: classes.btn,\n                  variant: \"outlined\",\n                  onClick: () => onSubmit(),\n                  children: \"Valider\"\n                })\n              })]\n            })\n          })\n        })\n      })\n    })\n  });\n};\n\nexport const getServerSideProps = async ctx => {\n  const req = ctx.req ? ctx.req : null;\n\n  if (req) {\n    const cookies = new Cookies(ctx.req, ctx.res);\n    const token = cookies.get('token');\n\n    if (token) {\n      const isTokValid = isTokenValid(token);\n\n      if (isTokValid) {\n        const res = await fetch(getThemes);\n        const themes = await res.json();\n        const res2 = await fetch(getContactEmails);\n        const emails = await res2.json();\n        return {\n          props: {\n            themes,\n            contactEmails: emails\n          }\n        };\n      }\n\n      ctx.res.writeHead(302, {\n        Location: '/'\n      });\n      ctx.res.end();\n      return {\n        props: {}\n      };\n    }\n\n    ctx.res.writeHead(302, {\n      Location: '/'\n    });\n    ctx.res.end();\n    return {\n      props: {}\n    };\n  }\n};\nexport default PrivateShareDocument;","map":null,"metadata":{},"sourceType":"module"}