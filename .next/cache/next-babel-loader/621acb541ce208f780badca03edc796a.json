{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment, useContext } from 'react';\nimport clsx from 'clsx';\nimport { List, ListItem, Menu, MenuItem, Button, Box, AppBar, Toolbar, Link, SwipeableDrawer, IconButton, ListItemText, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Router from 'next/router';\nimport router from 'next/router';\nimport { Icon, Title, Text } from '../../global';\nimport { menuItems, menuLoginItems } from '../../../utils';\nimport AppContext from '../../../context/AppContext';\nimport { logout } from '../../../lib/auth';\nconst useStyles = makeStyles(theme => ({\n  menuDesktop: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    },\n    [theme.breakpoints.up('lg')]: {\n      display: 'flex'\n    }\n  },\n  menuMobile: {\n    [theme.breakpoints.down('md')]: {\n      display: 'flex'\n    },\n    [theme.breakpoints.up('lg')]: {\n      display: 'none'\n    }\n  },\n  toolbar: {\n    paddingTop: '1em',\n    paddingBottom: '1em'\n  },\n  navbar: {\n    backgroundColor: theme.palette.background.default,\n    marginBottom: '10px',\n    height: '140px' // \"@media (min-width: 960px)\": {\n    //     position: \"-webkit-sticky\",\n    //     position: \"sticky\",\n    //     top: \"0px\"\n    // }\n\n  },\n  navbarItem: {\n    backgroundColor: theme.palette.blue.main,\n    color: theme.palette.background.default,\n    marginRight: '15px',\n    paddingLeft: '3em',\n    paddingRight: '3em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#000'\n    }\n  },\n  navbarItem2: {\n    backgroundColor: theme.palette.orange.main,\n    color: theme.palette.background.default,\n    marginRight: '15px',\n    paddingLeft: '3em',\n    paddingRight: '3em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#000'\n    }\n  },\n  list: {\n    listStyleType: 'disc',\n    fontSize: '20px'\n  },\n  items: {\n    display: 'flex'\n  },\n  btn: {\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#000'\n    }\n  },\n  iconBtn: {\n    backgroundColor: theme.palette.orange.main,\n    color: theme.palette.background.default,\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#000'\n    }\n  },\n  list: {\n    width: '100%'\n  },\n  fullList: {\n    width: 'auto'\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  loginBtn: {\n    backgroundColor: 'transparent',\n    // border: `0.5px ${theme.palette.blue.main} solid`,\n    '&:hover': {\n      backgroundColor: theme.palette.grey.secondary,\n      color: '#fff',\n      border: 'none'\n    }\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: anchor,\n    1: setAnchor\n  } = useState('left');\n  const {\n    0: openCollapseId,\n    1: setOpenCollapseId\n  } = useState(null);\n  const {\n    0: itemClicked,\n    1: setItemClicked\n  } = useState(null);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n  const {\n    isAuthenticated,\n    setUser\n  } = useContext(AppContext);\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [anchor]: open\n    }));\n  };\n\n  const handleClick = (event, id) => {\n    setAnchorEl(event.currentTarget);\n    setItemClicked(id);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setItemClicked(null);\n  };\n\n  const handleClickCollapse = id => {\n    setOpenCollapseId(id);\n  };\n\n  const onLogin = () => Router.push('/login');\n\n  const onLogout = async () => {\n    const res = await logout();\n\n    if (res) {\n      setUser(null);\n      Router.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(AppBar, {\n    position: \"static\",\n    className: classes.navbar,\n    children: /*#__PURE__*/_jsxs(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(Box, {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          classes: classes.logo,\n          children: /*#__PURE__*/_jsx(Icon, {\n            maxWidth: \"200px\",\n            src: \"/static/icons/logo_mobin.jpg\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.menuDesktop,\n        children: /*#__PURE__*/_jsxs(Box, {\n          className: classes.items,\n          alignItems: \"center\",\n          children: [menuItems.map((item, index) => /*#__PURE__*/_jsx(Box, {\n            children: /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(Button, {\n                \"aria-controls\": \"simple-menu\",\n                \"aria-haspopup\": \"true\",\n                onClick: event => item.link ? router.push(item.link) : handleClick(event, item.id),\n                className: classes.navbarItem,\n                children: item.icon ? /*#__PURE__*/_jsx(Icon, {\n                  maxWidth: \"60px\",\n                  src: `/static/icons/${item.icon}.png`\n                }) : /*#__PURE__*/_jsx(Title, {\n                  bold: true,\n                  color: \"#fff\",\n                  size: \"body2\",\n                  content: item.title\n                })\n              }), item.subItems && /*#__PURE__*/_jsx(Menu, {\n                className: classes.list,\n                id: \"simple-menu\",\n                anchorEl: anchorEl,\n                keepMounted: true,\n                open: itemClicked === item.id,\n                onClose: handleClose,\n                children: item.subItems.map((subItem, index) => /*#__PURE__*/_jsx(MenuItem, {\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: subItem.link,\n                    children: /*#__PURE__*/_jsx(Title, {\n                      listItem: true,\n                      listStyleType: \"disc\",\n                      listStylePosition: \"inside\",\n                      uppercase: true,\n                      bold: true,\n                      fontSize: \"12px\",\n                      letterspacing: \"1px\",\n                      color: \"black\",\n                      content: subItem.title\n                    })\n                  })\n                }, index))\n              })]\n            })\n          }, index)), isAuthenticated ? menuLoginItems.map((item, index) => /*#__PURE__*/_jsx(Box, {\n            children: /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(Button, {\n                \"aria-controls\": \"simple-menu\",\n                \"aria-haspopup\": \"true\",\n                onClick: event => {\n                  handleClick(event, item.id);\n                },\n                className: classes.navbarItem2,\n                children: item.icon ? /*#__PURE__*/_jsx(Icon, {\n                  maxWidth: \"60px\",\n                  src: `/static/icons/${item.icon}.png`\n                }) : /*#__PURE__*/_jsx(Title, {\n                  fontSize: \"12px\",\n                  bold: true,\n                  color: \"#fff\",\n                  size: \"body2\",\n                  content: item.title\n                })\n              }), /*#__PURE__*/_jsx(Menu, {\n                className: classes.list,\n                id: \"simple-menu\",\n                anchorEl: anchorEl,\n                keepMounted: true,\n                open: itemClicked === item.id,\n                onClose: handleClose,\n                children: item.subItems.map((subItem, index) => /*#__PURE__*/_jsx(MenuItem, {\n                  onClick: subItem.action ? () => onLogout() : null,\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: subItem.action ? '#' : subItem.link,\n                    children: /*#__PURE__*/_jsx(Title, {\n                      listItem: true,\n                      listStyleType: \"disc\",\n                      listStylePosition: \"inside\",\n                      uppercase: true,\n                      bold: true,\n                      fontSize: \"12px\",\n                      letterspacing: \"1px\",\n                      color: \"black\",\n                      content: subItem.title\n                    })\n                  })\n                }, index))\n              })]\n            })\n          }, index)) : /*#__PURE__*/_jsx(Button, {\n            onClick: () => onLogin(),\n            className: classes.loginBtn,\n            children: /*#__PURE__*/_jsxs(Box, {\n              children: [/*#__PURE__*/_jsx(Icon, {\n                src: \"/static/icons/P.Adh\\xE9rent1.png\",\n                maxWidth: \"30px\"\n              }), /*#__PURE__*/_jsx(Title, {\n                size: \"body2\",\n                fontSize: \"10px\" // uppercase\n                ,\n                lowercase: true // bold\n                ,\n                letterspacing: \"1px\",\n                color: \"black\",\n                content: \"Acc\\xE8s Adh\\xE9rent\"\n              })]\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: classes.menuMobile,\n        children: /*#__PURE__*/_jsx(Box, {\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(IconButton, {\n              className: classes.iconBtn,\n              onClick: toggleDrawer('left', true),\n              children: /*#__PURE__*/_jsx(MenuIcon, {})\n            }), /*#__PURE__*/_jsx(SwipeableDrawer, {\n              anchor: anchor,\n              open: state[anchor],\n              onClose: toggleDrawer(anchor, false),\n              onOpen: toggleDrawer(anchor, true),\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: clsx(classes.list, {\n                  [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n                }),\n                role: \"presentation\",\n                children: /*#__PURE__*/_jsxs(List, {\n                  component: \"nav\",\n                  children: [menuItems.map((item, index) => /*#__PURE__*/_jsxs(Fragment, {\n                    children: [/*#__PURE__*/_jsxs(ListItem, {\n                      button: true,\n                      onClick: () => item.link ? router.push(item.link) : handleClickCollapse(item.id),\n                      children: [/*#__PURE__*/_jsx(ListItemText, {\n                        children: /*#__PURE__*/_jsx(Title, {\n                          bold: true,\n                          size: \"body1\",\n                          content: item.title || ''\n                        })\n                      }), openCollapseId === item.id ? /*#__PURE__*/_jsx(ExpandLess, {}) : /*#__PURE__*/_jsx(ExpandMore, {})]\n                    }), /*#__PURE__*/_jsx(Collapse, {\n                      in: openCollapseId === item.id,\n                      timeout: \"auto\",\n                      unmountOnExit: true,\n                      children: /*#__PURE__*/_jsx(List, {\n                        component: \"div\",\n                        disablePadding: true,\n                        children: item.subItems && item.subItems.map((subItem, i) => /*#__PURE__*/_jsx(ListItem, {\n                          button: true,\n                          className: classes.nested,\n                          children: /*#__PURE__*/_jsx(Box, {\n                            pl: 3,\n                            children: /*#__PURE__*/_jsx(Link, {\n                              href: subItem.link,\n                              children: /*#__PURE__*/_jsx(Text, {\n                                bold: true,\n                                color: \"#2699b0\",\n                                size: \"body2\",\n                                uppercase: true,\n                                children: subItem.title || ''\n                              })\n                            })\n                          })\n                        }, i))\n                      })\n                    })]\n                  }, index)), isAuthenticated ? menuLoginItems.map((item, index) => /*#__PURE__*/_jsxs(Fragment, {\n                    children: [/*#__PURE__*/_jsxs(ListItem, {\n                      button: true,\n                      onClick: () => handleClickCollapse(item.id),\n                      children: [/*#__PURE__*/_jsx(ListItemText, {\n                        children: /*#__PURE__*/_jsx(Title, {\n                          bold: true,\n                          size: \"body1\",\n                          content: item.title || ''\n                        })\n                      }), openCollapseId === item.id ? /*#__PURE__*/_jsx(ExpandLess, {}) : /*#__PURE__*/_jsx(ExpandMore, {})]\n                    }), /*#__PURE__*/_jsx(Collapse, {\n                      in: openCollapseId === item.id,\n                      timeout: \"auto\",\n                      unmountOnExit: true,\n                      children: /*#__PURE__*/_jsx(List, {\n                        component: \"div\",\n                        disablePadding: true,\n                        children: item.subItems.map((subItem, i) => /*#__PURE__*/_jsx(ListItem, {\n                          button: true,\n                          onClick: subItem.action ? () => onLogout() : null,\n                          className: classes.nested,\n                          children: /*#__PURE__*/_jsx(Box, {\n                            pl: 3,\n                            children: /*#__PURE__*/_jsx(Link, {\n                              href: subItem.action ? '#' : subItem.link,\n                              children: /*#__PURE__*/_jsx(Text, {\n                                bold: true,\n                                color: \"#2699b0\",\n                                size: \"body2\",\n                                uppercase: true,\n                                children: subItem.title || ''\n                              })\n                            })\n                          })\n                        }, i))\n                      })\n                    })]\n                  }, index)) : /*#__PURE__*/_jsx(ListItem, {\n                    button: true,\n                    className: classes.nested,\n                    children: /*#__PURE__*/_jsx(Box, {\n                      pl: 3,\n                      children: /*#__PURE__*/_jsx(Link, {\n                        href: \"/login\",\n                        children: /*#__PURE__*/_jsx(Text, {\n                          bold: true,\n                          color: \"#2699b0\",\n                          size: \"body2\",\n                          uppercase: true,\n                          children: \"Acc\\xE8s Adh\\xE9rent\"\n                        })\n                      })\n                    })\n                  })]\n                })\n              })\n            })]\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}