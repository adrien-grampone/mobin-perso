{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adriengrampone/Desktop/mobin-front-git/pages/login/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useContext } from 'react';\nimport { Container, Box, Grid, Card, Paper, Divider, TextField, Button, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Layout, Title, Text } from '../../components';\nimport { login } from '../../lib/auth';\nimport AppContext from '../../context/AppContext';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: '2em',\n    border: `2px solid ${theme.palette.grey.main}`\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    minWidth: '100%'\n  },\n  textFieldBox: {\n    textAlign: 'center'\n  },\n  btn: {\n    paddingLeft: '2em',\n    paddingRight: '2em',\n    color: theme.palette.blue.main,\n    fontWeight: 'bold',\n    letterSpacing: '2px',\n    borderColor: theme.palette.grey.main,\n    borderRadius: '1.5em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main\n    }\n  }\n}));\n\nconst Login = ({}) => {\n  const classes = useStyles();\n  const {\n    setUser\n  } = useContext(AppContext);\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    identifier: '',\n    password: ''\n  });\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const validateEmail = email => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const onSubmit = async () => {\n    setLoader(true);\n    const {\n      identifier,\n      password\n    } = variables;\n    setError(null);\n\n    if (!validateEmail(identifier)) {\n      setLoader(false);\n      setError('Merci de saisir une adresse email.');\n      return;\n    }\n\n    if (password.length < 1) {\n      setLoader(false);\n      setError('Un mot de passe doit être saisi.');\n      return;\n    }\n\n    try {\n      const response = await login(variables);\n      const {\n        user\n      } = response.data;\n      setUser(user);\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError('Connexion impossible avec ce couple email/mot de passe. Veuillez réessayer.');\n    } // submit credentials\n\n  };\n\n  if (loader) {\n    return /*#__PURE__*/_jsxDEV(LinearProgress, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 4,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"h5\",\n                  letterspacing: \"2px\",\n                  bold: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#b1b3b4'\n                    },\n                    children: \"Connexion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#2699b0'\n                    },\n                    children: \"adh\\xE9rent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"#b1b3b4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: variables.identifier,\n                  onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                    identifier: event.target.value\n                  })),\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"password\",\n                  value: variables.password,\n                  onChange: event => setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                    password: event.target.value\n                  })),\n                  label: \"Mot de passe\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"body1\",\n                  bold: true,\n                  color: \"#e5352c\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.btn,\n                  variant: \"outlined\",\n                  onClick: () => onSubmit(),\n                  children: \"Valider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/adriengrampone/Desktop/mobin-front-git/pages/login/index.js"],"names":["useState","useContext","Container","Box","Grid","Card","Paper","Divider","TextField","Button","LinearProgress","makeStyles","Layout","Title","Text","login","AppContext","useStyles","theme","paper","padding","border","palette","grey","main","flexBox","display","alignItems","textField","minWidth","textFieldBox","textAlign","btn","paddingLeft","paddingRight","color","blue","fontWeight","letterSpacing","borderColor","borderRadius","backgroundColor","golden","Login","classes","setUser","variables","setVariables","identifier","password","loader","setLoader","error","setError","validateEmail","email","re","test","onSubmit","length","response","user","data","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\nimport {\n  Container, Box, Grid, Card, Paper, Divider, TextField, Button, LinearProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Layout, Title, Text } from '../../components';\nimport { login } from '../../lib/auth';\nimport AppContext from '../../context/AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '2em',\n    border: `2px solid ${theme.palette.grey.main}`,\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    minWidth: '100%',\n  },\n  textFieldBox: {\n    textAlign: 'center',\n  },\n  btn: {\n    paddingLeft: '2em',\n    paddingRight: '2em',\n    color: theme.palette.blue.main,\n    fontWeight: 'bold',\n    letterSpacing: '2px',\n    borderColor: theme.palette.grey.main,\n    borderRadius: '1.5em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main,\n    },\n  },\n}));\n\nconst Login = ({ }) => {\n  const classes = useStyles();\n  const { setUser } = useContext(AppContext);\n  const [variables, setVariables] = useState({\n    identifier: '',\n    password: '',\n  });\n  const [loader, setLoader] = useState(false);\n\n  const [error, setError] = useState(null);\n  const validateEmail = (email) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n  const onSubmit = async () => {\n    setLoader(true);\n    const { identifier, password } = variables;\n    setError(null);\n    if (!validateEmail(identifier)) {\n      setLoader(false);\n      setError('Merci de saisir une adresse email.');\n      return;\n    }\n    if (password.length < 1) {\n      setLoader(false);\n      setError('Un mot de passe doit être saisi.');\n      return;\n    }\n\n    try {\n      const response = await login(variables);\n      const { user } = response.data;\n      setUser(user);\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError('Connexion impossible avec ce couple email/mot de passe. Veuillez réessayer.');\n    }\n\n    // submit credentials\n  };\n\n  if (loader) {\n    return (\n      <LinearProgress color=\"primary\" />\n    );\n  }\n\n  return (\n    <Layout>\n      <Box mt={7}>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={10} md={8}>\n              <Paper className={classes.paper}>\n                <Box mb={4}>\n                  <Text size=\"h5\" letterspacing=\"2px\" bold>\n                    <span style={{ color: '#b1b3b4' }}>Connexion</span>\n                    {' '}\n                    <span style={{ color: '#2699b0' }}>adhérent</span>\n                  </Text>\n                </Box>\n                <Divider color=\"#b1b3b4\" />\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <TextField\n                    value={variables.identifier}\n                    onChange={(event) => setVariables({ ...variables, identifier: event.target.value })}\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <TextField\n                    type=\"password\"\n                    value={variables.password}\n                    onChange={(event) => setVariables({ ...variables, password: event.target.value })}\n                    label=\"Mot de passe\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.textField}\n                  />\n                </Box>\n                {\n                                    error && (\n                                    <Box mt={3} mb={2}>\n                                      <Text size=\"body1\" bold color=\"#e5352c\">\n                                        {error}\n                                      </Text>\n                                    </Box>\n                                    )\n                                }\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <Button className={classes.btn} variant=\"outlined\" onClick={() => onSubmit()}>\n                    Valider\n                    {/* <ArrowRight /> */}\n                  </Button>\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}