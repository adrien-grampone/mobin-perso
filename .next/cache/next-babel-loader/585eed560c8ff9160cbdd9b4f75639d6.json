{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport { Layout, Title, HtmlContent, Text } from '../../../components';\nimport { Box, Container, Grid, Table, TableBody, TableCell, Chip, Button } from '@material-ui/core';\nimport { getAdherent } from '../../../utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport showdown from 'showdown';\nconst useStyles = makeStyles(theme => ({\n  cell1: {\n    verticalAlign: 'top',\n    fontWeight: 'bold'\n  },\n  cell2: {\n    verticalAlign: 'top'\n  },\n  chip: {\n    marginTop: \"1em\",\n    backgroundColor: theme.palette.blue.main,\n    color: \"#fff\",\n    marginRight: '5px',\n    borderRadius: \"5px\"\n  },\n  chip2: {\n    marginTop: \"1em\",\n    backgroundColor: theme.palette.green.main,\n    color: \"#fff\",\n    marginRight: '5px',\n    borderRadius: \"5px\"\n  },\n  btn: {\n    textTransform: 'none',\n    textDecoration: \"underline\"\n  },\n  borderBox: {\n    borderLeft: `2px solid ${theme.palette.green.main}`,\n    paddingLeft: \"2em\"\n  }\n}));\n\nconst Adherent = ({\n  adherent = {}\n}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const converter = new showdown.Converter();\n  const {\n    nom_adherent = \"\",\n    presentation_adherent = \"\",\n    numero_telephone = \"\",\n    email = \"\",\n    site_internet = \"\",\n    adresse = \"\",\n    departements_actions = [],\n    projets = [],\n    competences = []\n  } = adherent;\n  const isWindowContext = false;\n\n  const _handleClick = site => {\n    let url = site;\n    let prefixHttp = 'http://';\n    let prefixHttps = 'https://';\n\n    if (url.substr(0, prefixHttp.length) !== prefixHttp && url.substr(0, prefixHttps.length) !== prefixHttps) {\n      url = prefix + url;\n    }\n\n    if (isWindowContext) {\n      window.open(url, '_blank');\n    }\n  };\n\n  useEffect(() => {\n    router.events.on('routeChangeComplete', () => {\n      window.scroll({\n        top: 0,\n        left: 0 // behavior: 'smooth'\n\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsxs(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsx(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsx(Box, {\n            mb: 4,\n            children: /*#__PURE__*/_jsx(Title, {\n              content: nom_adherent,\n              size: \"h4\",\n              bold: true,\n              letterspacing: \"2px\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxs(Box, {\n            mb: 5,\n            children: [/*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Adresse\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: /*#__PURE__*/_jsx(Text, {\n                      color: \"#000\",\n                      size: \"body1\",\n                      children: adresse || \"\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"T\\xE9l\\xE9phone\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: /*#__PURE__*/_jsx(Text, {\n                      color: \"#000\",\n                      size: \"body1\",\n                      children: numero_telephone || \"\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Email\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: /*#__PURE__*/_jsx(Text, {\n                      color: \"#000\",\n                      size: \"body1\",\n                      children: email ? /*#__PURE__*/_jsx(\"a\", {\n                        href: `mailto:${email}`,\n                        children: email\n                      }) : \"\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Site internet\"\n                  })\n                }), site_internet && /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: /*#__PURE__*/_jsx(Button, {\n                      className: classes.btn,\n                      onClick: () => _handleClick(site_internet),\n                      children: site_internet || \"\"\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Expertise\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: competences && /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: competences && competences.map((comp, index) => /*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(Chip, {\n                        className: classes.chip,\n                        label: comp.type\n                      })\n                    }, index))\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Projets\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: projets && /*#__PURE__*/_jsx(Box, {\n                    className: classes.borderBox,\n                    children: projets.map((proj, index) => /*#__PURE__*/_jsx(Box, {\n                      children: /*#__PURE__*/_jsx(Chip, {\n                        className: classes.chip2,\n                        label: proj.nom\n                      })\n                    }, index))\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxs(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 2,\n                  md: 4,\n                  children: /*#__PURE__*/_jsx(Title, {\n                    color: \"#000\",\n                    size: \"body2\",\n                    bold: true,\n                    content: \"Pr\\xE9sentation\"\n                  })\n                }), /*#__PURE__*/_jsx(Grid, {\n                  item: true,\n                  xs: 10,\n                  md: 8,\n                  children: /*#__PURE__*/_jsx(HtmlContent, {\n                    content: presentation_adherent || \"\"\n                  })\n                })]\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport const getServerSideProps = async context => {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(getAdherent(id));\n  const adherent = await res.json();\n  return {\n    props: {\n      adherent\n    }\n  };\n};\nexport default Adherent;","map":null,"metadata":{},"sourceType":"module"}