{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adriengrampone/Desktop/mobin-front-git/pages/login/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useContext } from 'react';\nimport { Container, Box, Grid, Card, Paper, Divider, TextField, Button, LinearProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Layout, Title, Text } from '../../components';\nimport { login } from '../../lib/auth';\nimport AppContext from '../../context/AppContext';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      padding: '2em',\n      border: \"2px solid \".concat(theme.palette.grey.main)\n    },\n    flexBox: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    textField: {\n      minWidth: '100%'\n    },\n    textFieldBox: {\n      textAlign: 'center'\n    },\n    btn: {\n      paddingLeft: '2em',\n      paddingRight: '2em',\n      color: theme.palette.blue.main,\n      fontWeight: 'bold',\n      letterSpacing: '2px',\n      borderColor: theme.palette.grey.main,\n      borderRadius: '1.5em',\n      '&:hover': {\n        backgroundColor: theme.palette.golden.main,\n        color: '#fff',\n        borderColor: theme.palette.golden.main\n      }\n    }\n  };\n});\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var classes = useStyles();\n\n  var _useContext = useContext(AppContext),\n      setUser = _useContext.setUser;\n\n  var _useState = useState({\n    identifier: '',\n    password: ''\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _useState2 = useState(false),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var validateEmail = function validateEmail(email) {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var identifier, password, response, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoader(true);\n              identifier = variables.identifier, password = variables.password;\n              setError(null);\n\n              if (validateEmail(identifier)) {\n                _context.next = 7;\n                break;\n              }\n\n              setLoader(false);\n              setError('Merci de saisir une adresse email.');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!(password.length < 1)) {\n                _context.next = 11;\n                break;\n              }\n\n              setLoader(false);\n              setError('Un mot de passe doit être saisi.');\n              return _context.abrupt(\"return\");\n\n            case 11:\n              _context.prev = 11;\n              _context.next = 14;\n              return login(variables);\n\n            case 14:\n              response = _context.sent;\n              user = response.data.user;\n              setUser(user);\n              setLoader(false);\n              _context.next = 25;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](11);\n              console.log(_context.t0);\n              setLoader(false);\n              setError('Connexion impossible avec ce couple email/mot de passe. Veuillez réessayer.');\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[11, 20]]);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (loader) {\n    return /*#__PURE__*/_jsxDEV(LinearProgress, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 7,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 4,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"h5\",\n                  letterspacing: \"2px\",\n                  bold: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#b1b3b4'\n                    },\n                    children: \"Connexion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, _this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#2699b0'\n                    },\n                    children: \"adh\\xE9rent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"#b1b3b4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  value: variables.identifier,\n                  onChange: function onChange(event) {\n                    return setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                      identifier: event.target.value\n                    }));\n                  },\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"password\",\n                  value: variables.password,\n                  onChange: function onChange(event) {\n                    return setVariables(_objectSpread(_objectSpread({}, variables), {}, {\n                      password: event.target.value\n                    }));\n                  },\n                  label: \"Mot de passe\",\n                  variant: \"outlined\",\n                  size: \"small\",\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this), error && /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  size: \"body1\",\n                  bold: true,\n                  color: \"#e5352c\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 39\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2,\n                className: classes.textFieldBox,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.btn,\n                  variant: \"outlined\",\n                  onClick: function onClick() {\n                    return onSubmit();\n                  },\n                  children: \"Valider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"TX7TGDsYiaSFR+M3qQd2XYyRPGI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adriengrampone/Desktop/mobin-front-git/pages/login/index.js"],"names":["useState","useContext","Container","Box","Grid","Card","Paper","Divider","TextField","Button","LinearProgress","makeStyles","Layout","Title","Text","login","AppContext","useStyles","theme","paper","padding","border","palette","grey","main","flexBox","display","alignItems","textField","minWidth","textFieldBox","textAlign","btn","paddingLeft","paddingRight","color","blue","fontWeight","letterSpacing","borderColor","borderRadius","backgroundColor","golden","Login","classes","setUser","identifier","password","variables","setVariables","loader","setLoader","error","setError","validateEmail","email","re","test","onSubmit","length","response","user","data","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\nimport {\n  Container, Box, Grid, Card, Paper, Divider, TextField, Button, LinearProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Layout, Title, Text } from '../../components';\nimport { login } from '../../lib/auth';\nimport AppContext from '../../context/AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '2em',\n    border: `2px solid ${theme.palette.grey.main}`,\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    minWidth: '100%',\n  },\n  textFieldBox: {\n    textAlign: 'center',\n  },\n  btn: {\n    paddingLeft: '2em',\n    paddingRight: '2em',\n    color: theme.palette.blue.main,\n    fontWeight: 'bold',\n    letterSpacing: '2px',\n    borderColor: theme.palette.grey.main,\n    borderRadius: '1.5em',\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main,\n    },\n  },\n}));\n\nconst Login = ({ }) => {\n  const classes = useStyles();\n  const { setUser } = useContext(AppContext);\n  const [variables, setVariables] = useState({\n    identifier: '',\n    password: '',\n  });\n  const [loader, setLoader] = useState(false);\n\n  const [error, setError] = useState(null);\n  const validateEmail = (email) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n  const onSubmit = async () => {\n    setLoader(true);\n    const { identifier, password } = variables;\n    setError(null);\n    if (!validateEmail(identifier)) {\n      setLoader(false);\n      setError('Merci de saisir une adresse email.');\n      return;\n    }\n    if (password.length < 1) {\n      setLoader(false);\n      setError('Un mot de passe doit être saisi.');\n      return;\n    }\n\n    try {\n      const response = await login(variables);\n      const { user } = response.data;\n      setUser(user);\n      setLoader(false);\n    } catch (error) {\n      console.log(error);\n      setLoader(false);\n      setError('Connexion impossible avec ce couple email/mot de passe. Veuillez réessayer.');\n    }\n\n    // submit credentials\n  };\n\n  if (loader) {\n    return (\n      <LinearProgress color=\"primary\" />\n    );\n  }\n\n  return (\n    <Layout>\n      <Box mt={7}>\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={10} md={8}>\n              <Paper className={classes.paper}>\n                <Box mb={4}>\n                  <Text size=\"h5\" letterspacing=\"2px\" bold>\n                    <span style={{ color: '#b1b3b4' }}>Connexion</span>\n                    {' '}\n                    <span style={{ color: '#2699b0' }}>adhérent</span>\n                  </Text>\n                </Box>\n                <Divider color=\"#b1b3b4\" />\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <TextField\n                    value={variables.identifier}\n                    onChange={(event) => setVariables({ ...variables, identifier: event.target.value })}\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <TextField\n                    type=\"password\"\n                    value={variables.password}\n                    onChange={(event) => setVariables({ ...variables, password: event.target.value })}\n                    label=\"Mot de passe\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.textField}\n                  />\n                </Box>\n                {\n                                    error && (\n                                    <Box mt={3} mb={2}>\n                                      <Text size=\"body1\" bold color=\"#e5352c\">\n                                        {error}\n                                      </Text>\n                                    </Box>\n                                    )\n                                }\n                <Box\n                  mt={3}\n                  mb={2}\n                  className={classes.textFieldBox}\n                >\n                  <Button className={classes.btn} variant=\"outlined\" onClick={() => onSubmit()}>\n                    Valider\n                    {/* <ArrowRight /> */}\n                  </Button>\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}