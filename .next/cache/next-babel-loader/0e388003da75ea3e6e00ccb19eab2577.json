{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adriengrampone/Desktop/mobin-front-git/lib/auth.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { API_URL } from '../utils/api/api-url'; //register a new user\n\nexport const registerUser = (username, email, password) => {\n  //prevent function from being ran on the server\n  if (true) {\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    axios.post(`${API_URL}/auth/local/register`, {\n      username,\n      email,\n      password\n    }).then(res => {\n      //set token response from Strapi for server validation\n      Cookie.set(\"token\", res.data.jwt); //resolve the promise to set loading to false in SignUp form\n\n      resolve(res); //redirect back to home page for restaurance selection\n\n      Router.push(\"/\");\n    }).catch(error => {\n      //reject the promise and pass the error object back to the form\n      reject(error);\n    });\n  });\n};\nexport const login = variables => {\n  const {\n    identifier = \"\",\n    password = \"\"\n  } = variables; //prevent function from being ran on the server\n\n  if (true) {\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    axios.post(`${API_URL}/auth/local/`, {\n      identifier,\n      password\n    }).then(res => {\n      //set token response from Strapi for server validation\n      Cookie.set(\"token\", res.data.jwt); //resolve the promise to set loading to false in SignUp form\n\n      resolve(res); //redirect back to home page for restaurance selection\n\n      Router.push(\"/auth\");\n    }).catch(error => {\n      //reject the promise and pass the error object back to the form\n      reject(error);\n    });\n  });\n};\nexport const logout = () => {\n  //remove token and user cookie\n  Cookie.remove(\"token\");\n  delete window.__user; // sync logout between multiple windows\n\n  window.localStorage.setItem(\"logout\", Date.now()); //redirect to the home page\n\n  return true;\n}; //Higher Order Component to wrap our pages and logout simultaneously logged in tabs\n\nexport const withAuthSync = Component => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === \"logout\") {\n        Router.push(\"/login\");\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"storage\", syncLogout);\n      return () => {\n        window.removeEventListener(\"storage\", syncLogout);\n        window.localStorage.removeItem(\"logout\");\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  };\n\n  if (Component.getInitialProps) {\n    Wrapper.getInitialProps = Component.getInitialProps;\n  }\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/Users/adriengrampone/Desktop/mobin-front-git/lib/auth.js"],"names":["useEffect","Router","Cookie","axios","API_URL","registerUser","username","email","password","Promise","resolve","reject","post","then","res","set","data","jwt","push","catch","error","login","variables","identifier","logout","remove","window","__user","localStorage","setItem","Date","now","withAuthSync","Component","Wrapper","props","syncLogout","event","key","addEventListener","removeEventListener","removeItem","getInitialProps"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\n\nimport { API_URL } from '../utils/api/api-url'\n\n\n//register a new user\nexport const registerUser = (username, email, password) => {\n    //prevent function from being ran on the server\n    if (typeof window === \"undefined\") {\n        return;\n    }\n    return new Promise((resolve, reject) => {\n        axios\n            .post(`${API_URL}/auth/local/register`, { username, email, password })\n            .then((res) => {\n                //set token response from Strapi for server validation\n                Cookie.set(\"token\", res.data.jwt);\n\n                //resolve the promise to set loading to false in SignUp form\n                resolve(res);\n                //redirect back to home page for restaurance selection\n                Router.push(\"/\");\n            })\n            .catch((error) => {\n                //reject the promise and pass the error object back to the form\n                reject(error);\n            });\n    });\n};\n\nexport const login = (variables) => {\n    const { identifier = \"\", password = \"\" } = variables\n    //prevent function from being ran on the server\n    if (typeof window === \"undefined\") {\n        return;\n    }\n\n    return new Promise((resolve, reject) => {\n        axios\n            .post(`${API_URL}/auth/local/`, { identifier, password })\n            .then((res) => {\n                //set token response from Strapi for server validation\n                Cookie.set(\"token\", res.data.jwt);\n\n                //resolve the promise to set loading to false in SignUp form\n                resolve(res);\n                //redirect back to home page for restaurance selection\n                Router.push(\"/auth\");\n            })\n            .catch((error) => {\n                //reject the promise and pass the error object back to the form\n                reject(error);\n            });\n    });\n};\n\nexport const logout = () => {\n    //remove token and user cookie\n    Cookie.remove(\"token\");\n    delete window.__user;\n    // sync logout between multiple windows\n    window.localStorage.setItem(\"logout\", Date.now());\n    //redirect to the home page\n    return true\n};\n\n//Higher Order Component to wrap our pages and logout simultaneously logged in tabs\nexport const withAuthSync = (Component) => {\n    const Wrapper = (props) => {\n        const syncLogout = (event) => {\n            if (event.key === \"logout\") {\n                Router.push(\"/login\");\n            }\n        };\n\n        useEffect(() => {\n            window.addEventListener(\"storage\", syncLogout);\n\n            return () => {\n                window.removeEventListener(\"storage\", syncLogout);\n                window.localStorage.removeItem(\"logout\");\n            };\n        }, []);\n\n        return <Component {...props} />;\n    };\n\n    if (Component.getInitialProps) {\n        Wrapper.getInitialProps = Component.getInitialProps;\n    }\n\n    return Wrapper;\n};"]},"metadata":{},"sourceType":"module"}