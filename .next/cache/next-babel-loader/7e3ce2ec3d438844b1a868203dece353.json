{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adriengrampone/Desktop/mobin-front-git/components/homepage/newsletter/NewsletterSection.js\";\nimport { useState } from 'react';\nimport { Container, Grid, Box, Button, FormControl, OutlinedInput, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Title, Text } from '../../global';\nimport { createContactEmail } from '../../../src/services/sendEmail';\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    textAlign: 'center'\n  },\n  box: {\n    border: `2px ${theme.palette.orange.main} solid`,\n    borderRadius: '10px',\n    padding: '2em',\n    backgroundColor: theme.palette.background.default\n  },\n  textField: {\n    color: theme.palette.orange.main\n  },\n  form: {\n    marginTop: '1em'\n  },\n  formGrid: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  btn: {\n    fontWeight: 'bold',\n    color: '#2699b0',\n    borderColor: theme.palette.orange.main,\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main\n    }\n  },\n  greyBox: {\n    marginTop: '1em',\n    backgroundColor: theme.palette.gray.main,\n    borderRadius: '10px',\n    padding: '4em'\n  }\n}));\n\nconst FiguresSection = () => {\n  const classes = useStyles();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(null);\n\n  const validateEmail = email => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const handleClick = async () => {\n    setErrorMessage(null);\n\n    if (!validateEmail(email)) {\n      setErrorMessage('Merci de saisir une adresse email valide.');\n      return;\n    }\n\n    const variables = {\n      email\n    };\n    const response = await createContactEmail(variables);\n\n    if (response) {\n      setEmail('');\n      alert('Votre email a été enregistré !');\n    } else {\n      alert(\"Une erreur s'est produite.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.greyBox,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.box,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(Title, {\n                color: \"#2699b0\",\n                content: \"Vous souhaitez \\xEAtre tenu.e au courant des actualit\\xE9s du r\\xE9seau ?\",\n                size: \"h6\",\n                bold: true,\n                letterspacing: \"2px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              color: \"#e95e2e\",\n              content: \"Inscrivez-vous \\xE0 notre newsletter mensuelle !\",\n              size: \"body1\",\n              uppercase: true,\n              bold: true,\n              letterspacing: \"2px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 8,\n                className: classes.formGrid,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  variant: \"outlined\",\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"outlined-adornment-amount\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                    value: email,\n                    onChange: e => setEmail(e.target.value),\n                    labelWidth: 60\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), errorMessage && /*#__PURE__*/_jsxDEV(Box, {\n                  mb: 2,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    color: \"#e5352c\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  mt: 2,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.btn,\n                    variant: \"outlined\",\n                    onClick: () => handleClick(),\n                    children: \"Valider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FiguresSection;","map":{"version":3,"sources":["/Users/adriengrampone/Desktop/mobin-front-git/components/homepage/newsletter/NewsletterSection.js"],"names":["useState","Container","Grid","Box","Button","FormControl","OutlinedInput","InputLabel","makeStyles","Title","Text","createContactEmail","useStyles","theme","grid","textAlign","box","border","palette","orange","main","borderRadius","padding","backgroundColor","background","default","textField","color","form","marginTop","formGrid","display","flexDirection","justifyContent","btn","fontWeight","borderColor","golden","greyBox","gray","FiguresSection","classes","email","setEmail","errorMessage","setErrorMessage","validateEmail","re","test","handleClick","variables","response","alert","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  Container, Grid, Box, Button, FormControl, OutlinedInput, InputLabel,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Title, Text } from '../../global';\nimport { createContactEmail } from '../../../src/services/sendEmail';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    textAlign: 'center',\n  },\n  box: {\n    border: `2px ${theme.palette.orange.main} solid`,\n    borderRadius: '10px',\n    padding: '2em',\n    backgroundColor: theme.palette.background.default,\n\n  },\n  textField: {\n    color: theme.palette.orange.main,\n  },\n  form: {\n    marginTop: '1em',\n  },\n  formGrid: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  btn: {\n    fontWeight: 'bold',\n    color: '#2699b0',\n    borderColor: theme.palette.orange.main,\n    '&:hover': {\n      backgroundColor: theme.palette.golden.main,\n      color: '#fff',\n      borderColor: theme.palette.golden.main,\n    },\n  },\n  greyBox: {\n    marginTop: '1em',\n    backgroundColor: theme.palette.gray.main,\n    borderRadius: '10px',\n    padding: '4em',\n  },\n}));\nconst FiguresSection = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const validateEmail = (email) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const handleClick = async () => {\n    setErrorMessage(null);\n\n    if (!validateEmail(email)) {\n      setErrorMessage('Merci de saisir une adresse email valide.');\n      return;\n    }\n\n    const variables = {\n      email,\n    };\n    const response = await createContactEmail(variables);\n\n    if (response) {\n      setEmail('');\n      alert('Votre email a été enregistré !');\n    } else {\n      alert(\"Une erreur s'est produite.\");\n    }\n  };\n\n  return (\n    <Container>\n      <Box className={classes.greyBox}>\n        <Grid container>\n          <Grid item xs={12} md={12} className={classes.grid}>\n            <Box className={classes.box}>\n              <Box mb={3}>\n                <Title color=\"#2699b0\" content=\"Vous souhaitez être tenu.e au courant des actualités du réseau ?\" size=\"h6\" bold letterspacing=\"2px\" />\n              </Box>\n              <Title color=\"#e95e2e\" content=\"Inscrivez-vous à notre newsletter mensuelle !\" size=\"body1\" uppercase bold letterspacing=\"2px\" />\n              {/* <Text center size=\"body1\" bold color=\"#e95e2e\">\n                                Inscrivez-vous à notre newsletter mensuelle !\n                            </Text> */}\n              {/* <FormControl fullWidth variant=\"outlined\" className={classes.form}>\n                                <InputLabel htmlFor=\"outlined-adornment-amount\">Email</InputLabel>\n                                <OutlinedInput\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    labelWidth={60}\n                                />\n                            </FormControl> */}\n              <Grid container justify=\"center\">\n                <Grid item xs={12} md={8} className={classes.formGrid}>\n                  <FormControl fullWidth variant=\"outlined\" className={classes.form}>\n                    <InputLabel htmlFor=\"outlined-adornment-amount\">Email</InputLabel>\n                    <OutlinedInput\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      labelWidth={60}\n                    />\n                  </FormControl>\n                  {\n                                        errorMessage && (\n                                        <Box mb={2}>\n                                          <Text color=\"#e5352c\">{errorMessage}</Text>\n                                        </Box>\n                                        )\n                                    }\n\n                  <Box mt={2}>\n                    <Button\n                      className={classes.btn}\n                      variant=\"outlined\"\n                      onClick={() => handleClick()}\n                    >\n                                          Valider\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default FiguresSection;\n"]},"metadata":{},"sourceType":"module"}