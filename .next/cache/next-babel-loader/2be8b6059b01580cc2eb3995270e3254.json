{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adriengrampone/Documents/A&F/mobin/frontend/components/global/html-content/HtmlContent.js\",\n    _this = this;\n\nimport { Fragment } from 'react';\nimport showdown from 'showdown';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nvar HtmlContent = function HtmlContent(_ref) {\n  var _ref$content = _ref.content,\n      content = _ref$content === void 0 ? \"\" : _ref$content;\n  var converter = new showdown.Converter();\n  var htmlContent = converter.makeHtml(content);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: ReactHtmlParser(htmlContent)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = HtmlContent;\nexport default HtmlContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"HtmlContent\");","map":{"version":3,"sources":["/Users/adriengrampone/Documents/A&F/mobin/frontend/components/global/html-content/HtmlContent.js"],"names":["Fragment","showdown","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","HtmlContent","content","converter","Converter","htmlContent","makeHtml"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAsB;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAT,EAAS;AACtC,MAAMC,SAAS,GAAG,IAAIP,QAAQ,CAACQ,SAAb,EAAlB;AACA,MAAMC,WAAW,GAAGF,SAAS,CAACG,QAAV,CAAmBJ,OAAnB,CAApB;AACA,sBACI,QAAC,QAAD;AAAA,cACKL,eAAe,CAACQ,WAAD;AADpB;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CARD;;KAAMJ,W;AAUN,eAAeA,WAAf","sourcesContent":["import { Fragment } from 'react'\nimport showdown from 'showdown'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nconst HtmlContent = ({ content = \"\" }) => {\n    const converter = new showdown.Converter()\n    const htmlContent = converter.makeHtml(content)\n    return (\n        <Fragment>\n            {ReactHtmlParser(htmlContent)}\n        </Fragment>\n    )\n}\n\nexport default HtmlContent"]},"metadata":{},"sourceType":"module"}